(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{418:function(a,_,t){"use strict";t.r(_);var v=t(3),c=Object(v.a)({},(function(){var a=this,_=a._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h2",{attrs:{id:"_1-什么是-async-await"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-async-await"}},[a._v("#")]),a._v(" 1. 什么是 async/await")]),a._v(" "),_("p",[_("code",[a._v("async/await")]),a._v(" 是 "),_("code",[a._v("ES8（ECMAScript 2017）")]),a._v("引入的新语法，用来简化 "),_("code",[a._v("Promise")]),a._v(" 异步操作。在 "),_("code",[a._v("async/await")]),a._v(" 出现之前，开发者只能通过链式 "),_("code",[a._v(".then()")]),a._v(" 的方式处理 "),_("code",[a._v("Promise")]),a._v(" 异步操作")]),a._v(" "),_("p",[_("code",[a._v(".then")]),a._v(" 链式调用的优点：解决了回调地狱的问题")]),a._v(" "),_("p",[_("code",[a._v(".then")]),a._v(" 链式调用的缺点：代码冗余、阅读性差、不易理解")]),a._v(" "),_("h2",{attrs:{id:"_2-async-await-的使用注意事项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-async-await-的使用注意事项"}},[a._v("#")]),a._v(" 2.  async/await 的使用注意事项")]),a._v(" "),_("ul",[_("li",[a._v("如果在 "),_("code",[a._v("function")]),a._v(" 中使用了 "),_("code",[a._v("await")]),a._v("，则 "),_("code",[a._v("function")]),a._v(" "),_("code",[a._v("必须")]),a._v("被 "),_("code",[a._v("async")]),a._v(" 修饰")]),a._v(" "),_("li",[a._v("在 "),_("code",[a._v("async")]),a._v(" 方法中，第一个 "),_("code",[a._v("await")]),a._v(" 之前的代码会同步执行，"),_("code",[a._v("await")]),a._v(" 之后的代码会异步执行")])])])}),[],!1,null,null,null);_.default=c.exports}}]);